import React, { useEffect, useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import landscapeImage from "../assets/landscape.jpg";
import Confetti from "react-confetti";
import image from "../assets/inkrealm_logo.png";
import vietnamFlag from "../assets/vietnam_flag.png";
import LoadingPage from "./LoadingPage";

const Popups = () => {
  const navigate = useNavigate();
  const [loading, setLoading] = useState(false);
  const [showConfetti, setShowConfetti] = useState(false);
  const [bgLoaded, setBgLoaded] = useState(false); // tr·∫°ng th√°i load background

  const handleNavigateWithLoading = (path) => {
    setLoading(true);
    setTimeout(() => {
      setLoading(false);
      navigate(path);
    }, 1500);
  };

  // preload background image
  useEffect(() => {
    const img = new Image();
    img.src = landscapeImage;
    img.onload = () => {
      setBgLoaded(true);
      setShowConfetti(true); // ch·ªâ b·∫≠t confetti khi ·∫£nh n·ªÅn s·∫µn s√†ng
    };
  }, []);

  return (
    <div
      className="fixed inset-0 flex justify-center items-center z-50 
      overflow-hidden transition-all duration-700"
      style={{
        backgroundImage: bgLoaded ? `url(${landscapeImage})` : "none",
        backgroundSize: "cover",
        backgroundPosition: "center",
        backgroundRepeat: "no-repeat",
        backgroundAttachment: "fixed",
      }}
    >
      {/* Fallback blur background trong l√∫c ·∫£nh ch∆∞a t·∫£i */}
      {!bgLoaded && (
        <div className="absolute inset-0 bg-gradient-to-br from-sky-200 to-sky-100 animate-pulse blur-lg" />
      )}

      {/* Hi·ªÉn th·ªã trang LoadingPage khi ƒëang ·ªü tr·∫°ng th√°i loading */}
      {loading && <LoadingPage />}

      {/* Hi·ªáu ·ª©ng ph√°o gi·∫•y */}
      {showConfetti && (
        <Confetti
          width={window.innerWidth}
          height={window.innerHeight}
          numberOfPieces={1000}
          recycle={false}
        />
      )}

      {/* N·ªôi dung popup */}
      <div className="relative bg-gradient-to-br from-cyan-200 via-sky-100 to-rose-100 
        rounded-4xl p-8 text-center w-11/12 max-w-md shadow-2xl
        transform scale-100 hover:scale-105 transition-transform duration-300 z-10">

        <img
          src={vietnamFlag}
          alt="Vietnam Flag"
          className="absolute top-3 left-4 w-15 h-auto 
            contrast-125 brightness-150 saturate-150 scale-75 hover:scale-100 transition-transform duration-300"
        />

        <img
          src={image}
          alt="Inkrealm Logo"
          className="ml-27 mb-3 w-40 h-15 contrast-125 brightness-90 saturate-200"
        />
        <h1 className="text-3xl mb-7 text-blue-600 font-medium">
          Ch√†o m·ª´ng b·∫°n ƒë√£ ƒë·∫øn!
        </h1>
        <h2 className="text-sky-800 mb-4 text-md font-base">
          Th·∫ø gi·ªõi truy·ªán d√†nh ri√™ng cho b·∫°n, n∆°i c·∫£m x√∫c v√† c√¢u chuy·ªán h√≤a quy·ªán.
          H√£y s·∫µn s√†ng kh√°m ph√° nh·ªØng h√†nh tr√¨nh ƒë·∫ßy th√∫ v·ªã!
        </h2>
        <h3 className="text-cyan-700 mb-3 text-md font-base">
          Inkrealm kh√¥ng ch·ªâ l√† m·ªôt n·ªÅn t·∫£ng ƒë·ªçc truy·ªán, m√† c√≤n l√† n∆°i b·∫°n c√≥ th·ªÉ
          k·∫øt n·ªëi v·ªõi nh·ªØng ng∆∞·ªùi y√™u th√≠ch truy·ªán gi·ªëng m√¨nh.
        </h3>
        <h4 className="text-red-400 font-base mb-3 text-md">
          B·∫°n c√≥ th·ªÉ t√¨m th·∫•y m·ªçi th·ªÉ lo·∫°i truy·ªán y√™u th√≠ch, t·ª´ ti·ªÉu thuy·∫øt l√£ng
          m·∫°n, phi√™u l∆∞u, kinh d·ªã cho ƒë·∫øn truy·ªán ng·∫Øn ƒë·∫ßy c·∫£m x√∫c. H√£y tham gia
          c·ªông ƒë·ªìng Inkrealm ƒë·ªÉ kh√°m ph√° v√† chia s·∫ª nh·ªØng c√¢u chuy·ªán c·ªßa ri√™ng b·∫°n nh√©!
        </h4>
        <button
          onClick={() => handleNavigateWithLoading("/HomePage")}
          className=" animate-pulse bg-gradient-to-r from-cyan-200 via-sky-100 to-red-200
           px-8 py-3 rounded-full text-lg font-medium text-sky-800 
           shadow-lg hover:shadow-xl hover:brightness-110 transition-all duration-300"
        >
          üöÄKh√°m ph√° ngay‚≠ê
        </button>
      </div>
    </div>
  );
};

export default Popups;
