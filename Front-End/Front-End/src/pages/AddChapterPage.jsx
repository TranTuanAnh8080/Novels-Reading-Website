import React, { useState, useEffect } from "react";
import {
  Calendar,
  Hash,
  Type,
  FileText,
  Clock,
  Save,
  Send,
  Trash2,
} from "lucide-react";
import Footer from "../components/SharedComponents/Footer";
import logo from "../assets/inkrealm_logo.png";
import { Link } from "react-router-dom";

export default function AddChapterPage() {
  const [isTranslated, setIsTranslated] = useState(false);
  const [chapterNumber, setChapterNumber] = useState("");
  const [chapterTitle, setChapterTitle] = useState("");
  const [chapterStatus, setChapterStatus] = useState("B·∫£n nh√°p");
  const [releaseDate, setReleaseDate] = useState("");
  const [content, setContent] = useState("");
  const [translatedContent, setTranslatedContent] = useState("");

  // üîπ Load l·∫°i d·ªØ li·ªáu t·ª´ localStorage khi m·ªü trang
  useEffect(() => {
    const saved = localStorage.getItem("addChapterDraft");
    if (saved) {
      const data = JSON.parse(saved);
      setIsTranslated(data.isTranslated || false);
      setChapterNumber(data.chapterNumber || "");
      setChapterTitle(data.chapterTitle || "");
      setChapterStatus(data.chapterStatus || "B·∫£n nh√°p");
      setReleaseDate(data.releaseDate || "");
      setContent(data.content || "");
      setTranslatedContent(data.translatedContent || "");
    }
  }, []);

  // üîπ L∆∞u b·∫£n nh√°p
  const handleSaveDraft = () => {
    const draft = {
      isTranslated,
      chapterNumber,
      chapterTitle,
      chapterStatus,
      releaseDate,
      content,
      translatedContent,
      savedAt: new Date().toISOString(),
    };
    localStorage.setItem("addChapterDraft", JSON.stringify(draft));
    alert("‚úÖ B·∫£n nh√°p ƒë√£ ƒë∆∞·ª£c l∆∞u t·∫°m!");
  };

  // üîπ X√≥a b·∫£n nh√°p
  const handleDeleteDraft = () => {
    if (confirm("üóëÔ∏è B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a b·∫£n nh√°p n√†y kh√¥ng?")) {
      localStorage.removeItem("addChapterDraft");
      setIsTranslated(false);
      setChapterNumber("");
      setChapterTitle("");
      setChapterStatus("B·∫£n nh√°p");
      setReleaseDate("");
      setContent("");
      setTranslatedContent("");
      alert("üßπ B·∫£n nh√°p ƒë√£ ƒë∆∞·ª£c x√≥a!");
    }
  };

  // üîπ G·ª≠i ki·ªÉm duy·ªát (t·∫°m)
  const handleSubmit = () => {
    console.log("D·ªØ li·ªáu g·ª≠i ki·ªÉm duy·ªát:", {
      isTranslated,
      chapterNumber,
      chapterTitle,
      chapterStatus,
      releaseDate,
      content,
      translatedContent,
    });
    alert("üöÄ G·ª≠i ki·ªÉm duy·ªát (hi·ªán t·∫°i ch∆∞a c√≥ API)");
  };

  return (
    <div className="min-h-screen flex flex-col bg-gray-50 text-gray-900">
      {/* Header */}
      <header className="bg-white border-b border-gray-200">
        <div className="max-w-7xl mx-auto flex items-center justify-between h-16 px-6">
          {/* Logo */}
        <Link to="/HomeLoggedIn" className="flex items-center space-x-2">
          <img src={logo} alt="InkRealm" className="h-10 w-auto" />
        </Link>

          {/* User */}
          <div className="flex items-center gap-3">
            <span className="text-sm font-medium text-gray-700">T√°c gi·∫£</span>
            <Link to="/Profile" className="flex items-center">
            <img
              src="https://cdn-icons-png.flaticon.com/512/3135/3135715.png"
              alt="User Avatar"
              className="w-9 h-9 rounded-full border border-gray-200"
            />
            </Link>
          </div>
        </div>
      </header>

      {/* Breadcrumb */}
      <div className="max-w-7xl mx-auto w-full px-6 py-6 text-sm text-gray-500">
        <span>Trang c√° nh√¢n</span> <span className="mx-1">‚Ä∫</span>
        <span>ƒêƒÉng truy·ªán</span> <span className="mx-1">‚Ä∫</span>
        <span>Qu·ª∑ B√≠ Chi Ch·ªß</span> <span className="mx-1">‚Ä∫</span>
        <span className="text-gray-900 font-medium">Th√™m ch∆∞∆°ng m·ªõi</span>
      </div>

      {/* Main */}
      <main className="flex-grow">
        <div className="max-w-5xl mx-auto bg-white rounded-lg border border-gray-200 shadow-sm p-8 mb-16">
          <h1 className="text-2xl font-bold mb-2">Th√™m ch∆∞∆°ng m·ªõi</h1>
          <p className="text-gray-600 mb-8">
            Th√™m ch∆∞∆°ng m·ªõi cho truy·ªán <strong>‚ÄúQu·ª∑ B√≠ Chi Ch·ªß‚Äù</strong>
          </p>

          {/* --- Th√¥ng tin ch∆∞∆°ng --- */}
          <section className="border border-gray-200 rounded-lg p-6 mb-6">
            <h2 className="text-base font-semibold text-gray-900 mb-6">
              Th√¥ng tin ch∆∞∆°ng
            </h2>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* S·ªë ch∆∞∆°ng */}
              <div>
                <label className="flex items-center gap-2 text-sm font-medium text-gray-700 mb-2">
                  <Hash className="w-4 h-4 text-gray-700" />
                  S·ªë ch∆∞∆°ng
                </label>
                <input
                  type="text"
                  value={chapterNumber}
                  onChange={(e) => setChapterNumber(e.target.value)}
                  placeholder="V√≠ d·ª•: 12"
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none"
                />
              </div>

              {/* Ti√™u ƒë·ªÅ ch∆∞∆°ng */}
              <div>
                <label className="flex items-center gap-2 text-sm font-medium text-gray-700 mb-2">
                  <Type className="w-4 h-4 text-gray-700" />
                  Ti√™u ƒë·ªÅ ch∆∞∆°ng
                </label>
                <input
                  type="text"
                  value={chapterTitle}
                  onChange={(e) => setChapterTitle(e.target.value)}
                  placeholder="V√≠ d·ª•: Kh√∫c d·∫°o ƒë·∫ßu m·ªõi"
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none"
                />
              </div>

              {/* Tr·∫°ng th√°i */}
              <div>
                <label className="flex items-center gap-2 text-sm font-medium text-gray-700 mb-2">
                  <FileText className="w-4 h-4 text-gray-700" />
                  Tr·∫°ng th√°i
                </label>
                <select
                  value={chapterStatus}
                  onChange={(e) => setChapterStatus(e.target.value)}
                  className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none bg-white"
                >
                  <option>B·∫£n nh√°p</option>
                  <option>ƒêang ki·ªÉm duy·ªát</option>
                  <option>ƒê√£ duy·ªát</option>
                </select>
              </div>

              {/* Th·ªùi gian ƒëƒÉng */}
              <div>
                <label className="flex items-center gap-2 text-sm font-medium text-gray-700 mb-2">
                  <Clock className="w-4 h-4 text-gray-700" />
                  Th·ªùi gian ƒëƒÉng (t√πy ch·ªçn)
                </label>
                <div className="relative">
                  <input
                    type="datetime-local"
                    value={releaseDate}
                    onChange={(e) => setReleaseDate(e.target.value)}
                    className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none pr-10"
                  />
                  <Calendar className="absolute right-3 top-2.5 w-5 h-5 text-gray-400 pointer-events-none" />
                </div>
              </div>
            </div>

            <div className="mt-6">
              <label className="flex items-center gap-2 cursor-pointer">
                <input
                  type="checkbox"
                  checked={isTranslated}
                  onChange={(e) => setIsTranslated(e.target.checked)}
                  className="w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
                />
                <span className="text-sm text-gray-700 font-medium">
                  L√† truy·ªán d·ªãch
                </span>
              </label>
            </div>
          </section>

          {/* --- N·ªôi dung ch∆∞∆°ng --- */}
          <section className="border border-gray-200 rounded-lg p-6">
            <h2 className="flex items-center gap-2 text-base font-semibold text-gray-900 mb-6">
              <FileText className="w-5 h-5 text-gray-900" />
              N·ªôi dung ch∆∞∆°ng
            </h2>

            {isTranslated ? (
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm text-gray-700 mb-2">
                    Nh·∫≠p n·ªôi dung c·∫ßn d·ªãch
                  </label>
                  <textarea
                    value={content}
                    onChange={(e) => setContent(e.target.value)}
                    rows={12}
                    placeholder="Nh·∫≠p n·ªôi dung c·∫ßn d·ªãch..."
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none resize-none"
                  />
                </div>

                <div>
                  <label className="block text-sm text-gray-700 mb-2">
                    N·ªôi dung ƒë√£ ƒë∆∞·ª£c d·ªãch
                  </label>
                  <textarea
                    value={translatedContent}
                    onChange={(e) => setTranslatedContent(e.target.value)}
                    rows={12}
                    placeholder="Nh·∫≠p n·ªôi dung b·∫£n d·ªãch..."
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none resize-none"
                  />
                </div>
              </div>
            ) : (
              <textarea
                value={content}
                onChange={(e) => setContent(e.target.value)}
                rows={12}
                placeholder="Nh·∫≠p n·ªôi dung ch∆∞∆°ng..."
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none resize-none"
              />
            )}
          </section>

          {/* --- Buttons --- */}
          <div className="flex justify-end gap-4 mt-6 flex-wrap">
            <button
              onClick={handleDeleteDraft}
              className="flex items-center gap-2 px-6 py-2.5 text-red-600 bg-white border border-red-300 rounded-lg hover:bg-red-50 font-medium"
            >
              <Trash2 className="w-4 h-4" />
              X√≥a b·∫£n nh√°p
            </button>
            <button
              onClick={handleSaveDraft}
              className="flex items-center gap-2 px-6 py-2.5 text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 font-medium"
            >
              <Save className="w-4 h-4" />
              L∆∞u b·∫£n nh√°p
            </button>
            <button
              onClick={handleSubmit}
              className="flex items-center gap-2 px-6 py-2.5 text-white bg-blue-600 rounded-lg hover:bg-blue-700 font-medium"
            >
              <Send className="w-4 h-4" />
              G·ª≠i ki·ªÉm duy·ªát
            </button>
          </div>
        </div>
      </main>

      {/* Footer */}
      <Footer />
    </div>
  );
}
